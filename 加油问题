//经过加油站时， 往优先队列加入Bi
//当燃料箱空时，
//       如果优先队列是空的，则无法到达终点
//       否则取出优先队列最大元素，并用来给卡车加油


#include<cstdio>
#include<queue>
using namespace std;

#define MAX_N 10
int L = 4, P = 10, N = 4;

int A[MAX_N + 1] = { 10, 14, 20, 21 }; // 加油站距离起点的距离
int B[MAX_N + 1] = { 10, 5, 2, 4 };      // 在加油站可以加的油量

void solve()
{
	//方便起见，最后一个点也设置一个加油站
	A[N] = L;
	B[N] = 0;

	priority_queue<int> que;

	int ans = 0, pos = 0, tank = P; // ans 代表加油次数，pos代表距起点距离，tank 代表油箱油量

	for (int i = 0;i < N;++i)
	{
		int d = A[i] - pos;   //需要行驶的距离

		while (tank - d < 0)      //  当油量少于距离时，向优先队列里面加油
		{
			if (que.empty())         // 如果优先队列为空时，无法加油，则无法到达终点
			{
				puts("-1");
				return;
			}
			tank += que.top();   // 向油箱加油
			que.pop();
			ans++;
		}

		tank -= d;
		pos = A[i];
		que.push(B[i]);     // 经过加油站，则加入优先队列
	}

	printf("%d\n", ans);      //    输出加油次数
}

int main()
{
	solve();

	return 0;
}
