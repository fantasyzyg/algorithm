//我的方法
#include<iostream>
#include<utility>
#include<vector>
#include<algorithm>
using namespace std;

int main()
{
	int N;
	while (cin >> N)
	{
		int a, b;
		vector<pair<int, int>> vec;
		for (int i = 0;i < N;++i)
		{
			cin >> a >> b;
			vec.push_back(make_pair(a, b));
		}
		sort(vec.begin(), vec.end(), [](pair<int, int> a, pair<int, int> b)->bool {
			if (a.first < b.first)
				return true;
			else
				return false;
		});
		a = vec[0].first;
		b = vec[0].second;
		for (auto ix = vec.begin()+1;ix != vec.end();++ix)
		{
			if ((*ix).first > a)
				break;
			else if ((*ix).second < b)
				b = (*ix).second;
		}

		cout << a << " " << b << endl;
	}

	return 0;
}

//一位牛客的答案
链接：https://www.nowcoder.com/questionTerminal/ba91786c4759403992896d859e87a6cd
来源：牛客网

#include <algorithm>  
#include <iostream>  
using namespace std;  
struct NUMBER{  
    int x, y;  
};  
NUMBER a[1000];  
   
bool cmp( NUMBER a, NUMBER b ){  
    if( a.x == b.x )  
        return a.y < b.y;  
    else return a.x < b.x;  
   
};  
   
int main()  
{  
    int i,n;  
    while( (cin >> n)!=NULL ){  
        for( i=0; i<n; i++ )  
            cin >> a[i].x >> a[i].y;  
        sort(a,a+n,cmp);  
        cout << a[0].x << " " << a[0].y << endl;  
    }  
    return 0;  
}

//另一位牛客的答案
链接：https://www.nowcoder.com/questionTerminal/ba91786c4759403992896d859e87a6cd
来源：牛客网

#include <iostream>
using namespace std;
 
int main() {
    int N;
    while (cin >> N) {
        int arr[N][2];
        for (int i = 0; i < N; i++)
            cin >> arr[i][0] >> arr[i][1];
        int x_min = arr[0][0], y_min = arr[0][1];
        for (int i = 0; i < N; i++)
            if (x_min > arr[i][0]) {
                x_min = arr[i][0];
                y_min = arr[i][1];
            } else if (x_min == arr[i][0] && y_min > arr[i][1])
                y_min = arr[i][1];
        cout << x_min << " " << y_min << endl;
    }
    return 0;
}
